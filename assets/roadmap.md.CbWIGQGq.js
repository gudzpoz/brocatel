import{_ as t,c as e,o as s,a4 as i}from"./chunks/framework.CPGI-sM3.js";const m=JSON.parse('{"title":"Brocatel Roadmap","description":"","frontmatter":{},"headers":[],"relativePath":"roadmap.md","filePath":"roadmap.md"}'),a={name:"roadmap.md"},l=i('<h1 id="brocatel-roadmap" tabindex="-1">Brocatel Roadmap <a class="header-anchor" href="#brocatel-roadmap" aria-label="Permalink to &quot;Brocatel Roadmap&quot;">​</a></h1><h2 id="v0-x-x" tabindex="-1"><code>v0.X.X</code> <a class="header-anchor" href="#v0-x-x" aria-label="Permalink to &quot;`v0.X.X`&quot;">​</a></h2><p>We do not plan to follow <a href="https://semver.org/" target="_blank" rel="noreferrer">Semantic Versioning</a> at this stage, since drastic change in our Markdown grammar is expected (and personally I don&#39;t feel like large commits).</p><h3 id="v0-1-0" tabindex="-1"><code>v0.1.0</code> <a class="header-anchor" href="#v0-1-0" aria-label="Permalink to &quot;`v0.1.0`&quot;">​</a></h3><p>Single-threaded virtual machine implementation:</p><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> VM skeleton with delayed root node loading and array walking capabilities.</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Label and link support in the VM. <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> A label should also serve as a text pointer.</li></ul></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Global environment and if-else call support.</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Function call support.</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Tagged text support and Gettext API design.</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> User input (options) support.</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Save data saving &amp; loading.</li></ul><h3 id="v0-2-0" tabindex="-1"><code>v0.2.0</code> <a class="header-anchor" href="#v0-2-0" aria-label="Permalink to &quot;`v0.2.0`&quot;">​</a></h3><p>Markdown compiler implementation:</p><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Plain text nodes.</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Tagged text nodes. <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Tag data interpolation.</li></ul></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Links. <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Compile-time link validity checking.</li></ul></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Options. <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Rework to allow show-once options.</li></ul></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Function calls.</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Labels. <ul><li>Compile-time label validity check: No need since we check links?</li></ul></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Macros.</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Debug info generation.</li></ul><h3 id="v0-3-0" tabindex="-1"><code>v0.3.0</code> <a class="header-anchor" href="#v0-3-0" aria-label="Permalink to &quot;`v0.3.0`&quot;">​</a></h3><h4 id="runtime-api-design" tabindex="-1">Runtime API design. <a class="header-anchor" href="#runtime-api-design" aria-label="Permalink to &quot;Runtime API design.&quot;">​</a></h4><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> API naming convention (maybe all-capital to avoid name conflicts with user labels): ALL CAPITALS &amp; some Lua reserved words. <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Make API values read-only.</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> More API. <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> <code>BREAK</code> or <code>EXIT</code> or <strong><code>END</code></strong> for loops.<div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:::loop </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">`loop_name`</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> A</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  `END(loop_name)`</span></span></code></pre></div><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Syntax sugar: <code>---</code> for <code>END()</code> (we are going to use it for function calls)</li></ul></li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Search for TODO in <a href="./arch.html">arch.md</a>.</li></ul></li></ul></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> IP (instruction pointer) access.</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Label access counter. <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Label fuzzy lookup.<div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;"># Markdown Examples</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[](</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;--shiki-light-text-decoration:underline;--shiki-dark-text-decoration:underline;">#markdown-examples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>(This allows running <code>README.md</code> from most repositories.)</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Exclude normal links like <code>[Wikipedia](https://...)</code>.</li></ul></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Show-once options, show-forever options and show-N-times options. <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Data save API (allow functions to attach data to the current IP or any path).</li></ul></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Add caching layer. <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Cache output to provide idempotency.</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Cache user input.</li></ul></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> IFID: use frontmatter to include <a href="https://www.ifwiki.org/IFID" target="_blank" rel="noreferrer">IFIDs</a> for stories.</li></ul><h4 id="integration-examples" tabindex="-1">Integration examples <a class="header-anchor" href="#integration-examples" aria-label="Permalink to &quot;Integration examples&quot;">​</a></h4><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Save &amp; load. <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> API.</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Examples? Or detailed Lua documentation.</li></ul></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Export read counts along with the lines to let the user / the outer game engine decide whether to skip lines (or even display some relevant text / highlighting).</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Complete porting The Intercept, which is a little bit lengthy.</li></ul><h3 id="v0-4-0" tabindex="-1"><code>v0.4.0</code> <a class="header-anchor" href="#v0-4-0" aria-label="Permalink to &quot;`v0.4.0`&quot;">​</a></h3><p>Multi-thread (not <em>those</em> threads) support:</p><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Multi-thread API design. <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Replace the quote grammar (<code>&gt; text</code>) with a macro (maybe named <code>then</code>?).</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Use <code>&gt;</code> to signify thread-related operations.</li></ul></li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Multi-thread API implementation and thread-local variable support.</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Story call and local variable support. <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Function stack: call and return.</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Tail call support: jump to elsewhere, popping up a stack frame.</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Compiler error: forbid jumping from inside of a function.</li></ul></li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Coroutine support. <ul><li>What about structured concurrency?</li></ul></li></ul><p>Some clarifications:</p><ul><li>With <strong>threads</strong>, you may build games (with <em>lots</em> of tweaks, of course) like <a href="https://en.wikipedia.org/wiki/428:_Shibuya_Scramble" target="_blank" rel="noreferrer">428: Shibuya Scramble</a>, where multiple threads of stories interweaves.</li><li>With <strong>coroutines</strong>, you may construct conversations where people talk about multiple things simultaneously, just like <a href="https://github.com/inkle/ink/blob/master/Documentation/WritingWithInk.md#2-threads" target="_blank" rel="noreferrer"><em>threads</em> in Ink</a>.</li><li><strong>Story calls</strong> are just function calls for plots.</li></ul><h3 id="v0-5-0-and-on" tabindex="-1"><code>v0.5.0</code> and on <a class="header-anchor" href="#v0-5-0-and-on" aria-label="Permalink to &quot;`v0.5.0` and on&quot;">​</a></h3><p>Bug fixes and Markdown grammar optimization.</p><p>Documentation, tutorials, etc.</p><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Porting <a href="https://github.com/inkle/the-intercept/blob/master/Assets/Ink/TheIntercept.ink" target="_blank" rel="noreferrer">The Intercept</a>.</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Porting <a href="./cloak.html">Cloak of Darkness</a>.</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Follow suit: <a href="https://www.inklestudios.com/ink/web-tutorial/" target="_blank" rel="noreferrer">Tutorial for Ink</a> (better still if interactive).</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> IDE implementation (or probably just a VS Code plugin with language server protocol implementation). <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Simplistic LSP implementation detecting compilation errors.</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Using Lua LSP for Lua checking &amp; completion.</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Executing stories right from VS Code. <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Highlighting runtime errors in the Markdown source code.</li></ul></li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Simplistic debugging interface by implementing the Debug Adapter Protocol. <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Stepping.</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Breakpoints.</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Pause/continue/stop/restart.</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Lua variables.</li></ul></li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Allow exporting stories into a single web page to be exported online.</li></ul></li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Frontend implementation, so that one can easily publish their IF online. <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Choice-based stories.</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> A bit parser-like frontend.</li></ul></li></ul><h2 id="v1-0-0" tabindex="-1"><code>v1.0.0</code> <a class="header-anchor" href="#v1-0-0" aria-label="Permalink to &quot;`v1.0.0`&quot;">​</a></h2><p>Let&#39;s start <a href="https://semver.org/" target="_blank" rel="noreferrer">Semantic Versioning</a>.</p>',25),c=[l];function o(n,k,d,h,r,p){return s(),e("div",null,c)}const u=t(a,[["render",o]]);export{m as __pageData,u as default};
